name: HandArmMultiObjectManipulation

physics_engine: ${..physics_engine}
full_experiment_name: ${..experiment}
#test: ${..test}


sim:
    use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
    up_axis: "z"
    dt: 0.016666667  # required, but overridden in DexterityBase.yaml
    gravity: [0.0, 0.0, -9.81]  # required, but overridden in base DexterityBase.yaml
    disable_gravity: False
    #contact_collection: 0

env:
    enableCameraSensors: True  # Set to true to test visual observations
    numEnvs: ${resolve_default:16384,${...num_envs}}
    numObservations: 1  # overwritten depending on observations
    numActions: 1  # overwritten depending on robot configuration
    controlFrequencyInv: 3
    renderFPS: 120
    
    proprioceptive_observations: ['actuated_dof_pos', 'actuated_dof_vel', 'fingertip_pos', 'fingertip_quat']
    object_observations: ['object_pos', 'object_bounding_box', 'target_object_bounding_box' ]
    task_observations: ['fingertip_to_target_object_pos',  'target_object_to_goal_pos']

    observations: ['arm_dof_pos', 'arm_dof_vel', 'actuated_dof_targets', 'fingertip_pos', 'fingertip_quat', 'goal_pos', 'target_object_pos_initial', 'target_object_synthetic-pointcloud', 'robot_synthetic-pointcloud'] #'target_object_synthetic-pointcloud', 'scene_synthetic-pointcloud'] #'topview-pointcloud', "topview_target_object-pointcloud"]

    #observations: ["actuated_dof_pos", "actuated_dof_vel", "fingertip_pos", "fingertip_quat", "object_pos", "object_bounding_box", "target_object_bounding_box", "fingertip_to_target_object_pos", "target_object_to_goal_pos"]

    teacher_observations: ${merge_lists:${.proprioceptive_observations},${.object_observations},${.task_observations}}

rl:
    # Possible goals are ['lift', 'reposition', 'repose', 'place', 'throw']
    # 'lift' requires the policy to move the object to a height of 0.3m.
    # 'reposition' requires the policy to move the object to a different position.
    # 'oriented_reposition' requires the policy to move the object to a different position and achieve a specific orientation of the robot hand relative to the object, for example, held from above, held from the left, etc..
    # 'throw' requires the policy to throw the object into a target bin.
    goal: 'reposition'
    goal_threshold: 0.05
    

    reward:
        # Task rewards.
        reaching: 1.0
        lifting: 5.0
        goal: 50.0
        success: 50.0

        # Safety rewards.
        dof_velocity_penalty: 1.0
        collision_penalty: 0.1

        #object_velocity_penalty: 5.0
        #dof_velocity_penalty: 5.0
        #fingertip_progression: 50.0
        #goal_progression: 250
        #success_bonus: 1000.


    lifting_threshold: 0.05


    reset:
        max_episode_length: 200
        reset_reached_goal: False
