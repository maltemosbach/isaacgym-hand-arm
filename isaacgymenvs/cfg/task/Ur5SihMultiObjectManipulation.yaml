name: Ur5SihMultiObjectManipulation

physics_engine: ${..physics_engine}
full_experiment_name: ${..experiment}
#test: ${..test}


sim:
    use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
    up_axis: "z"
    dt: 0.016666667  # required, but overridden in DexterityBase.yaml
    gravity: [0.0, 0.0, -9.81]  # required, but overridden in base DexterityBase.yaml
    disable_gravity: False
    #contact_collection: 0

env:
    enableCameraSensors: True  # Set to true to test visual observations
    numEnvs: ${resolve_default:16384,${...num_envs}}
    numObservations: 1  # overwritten depending on observations
    numActions: 1  # overwritten depending on robot configuration
    controlFrequencyInv: 3
    renderFPS: 60
    
    proprioceptive_observations: ['ur5_joint_pos', 'ur5_flange_pose', 'sih_fingertip_pos', 'sih_fingertip_quat', 'sih_fingertip_linvel', 'dof_position_targets']
    object_observations: ['object_pos', 'object_bounding_box', 'target_object_bounding_box' ]
    task_observations: ['sih_fingertip_to_target_object_pos',  'target_object_to_goal_pos']

    # Privileged teacher to synthetic visual student.
    #observations: ['arm_dof_pos', 'arm_dof_vel', 'actuated_dof_targets', 'fingertip_pos', 'fingertip_quat', 'goal_pos', 'target_object_pos_initial', 'target_object_synthetic-pointcloud', 'robot_synthetic-pointcloud'] #'target_object_synthetic-pointcloud', 'scene_synthetic-pointcloud'] #'topview-pointcloud', "topview_target_object-pointcloud"]

    # Privileged teacher to privileged history-aware student.
    #observations: ['arm_dof_pos', 'arm_dof_vel', 'actuated_dof_targets', 'fingertip_pos', 'fingertip_quat', 'goal_pos', 'target_object_pos_initial', 'object_pos', 'object_bounding_box'] #'target_object_synthetic-pointcloud', 'scene_synthetic-pointcloud'] #'topview-pointcloud', "topview_target_object-pointcloud"]
    
    # Distill to visual history-aware student.
    #observations: ['arm_dof_pos', 'arm_dof_vel', 'actuated_dof_targets', 'fingertip_pos', 'fingertip_quat', 'goal_pos', 'target_object_pos_initial', 'target_object_synthetic_initial-pointcloud', 'object_synthetic-pointcloud', 'robot_synthetic-pointcloud']

    # Distill to visual history-aware student from real camera.
    #observations: ['arm_dof_pos', 'arm_dof_vel', 'actuated_dof_targets', 'fingertip_pos', 'fingertip_quat', 'goal_pos', 'topview_sam_pos_initial', 'topview_sam_initial-pointcloud', 'topview-pointcloud']

    # Harder proprioceptive observations.
    #observations: ['arm_dof_pos', 'arm_dof_vel', 'actuated_dof_targets', 'eef_pos', 'eef_quat', 'fingertip_pos', 'target_object_pos', 'goal_pos', 'object_synthetic-pointcloud', 'target_object_synthetic_initial-pointcloud', 'robot_synthetic-pointcloud', 'workspace_synthetic-pointcloud', 'table_synthetic-pointcloud'] #'target_object_synthetic-pointcloud', 'scene_synthetic-pointcloud'] #'topview-pointcloud', "topview_target_object-pointcloud"]

    teacher_observations: ${merge_lists:${.proprioceptive_observations},${.object_observations},${.task_observations}}
    observations: ${merge_lists:${.proprioceptive_observations},${.object_observations},${.task_observations}}
    #observations: ['goal_pos', 'ur5_flange_pose', 'dof_position_targets', 'object_synthetic_pointcloud', 'ur5sih_synthetic_pointcloud', 'goal_synthetic_pointcloud']

    actions: ['ur5_relative_joint_pos', 'sih_smoothed_relative_servo_pos']

rl:
    # Possible goals are ['lift', 'reposition', 'repose', 'place', 'throw']
    # 'lift' requires the policy to move the object to a height of 0.3m.
    # 'reposition' requires the policy to move the object to a different position.
    # 'oriented_reposition' requires the policy to move the object to a different position and achieve a specific orientation of the robot hand relative to the object, for example, held from above, held from the left, etc..
    # 'throw' requires the policy to throw the object into a target bin.
    goal: 'reposition'
    goal_threshold: 0.05
    

    reward:
        # Task rewards.
        reaching: 1.0
        lifting: 5.0
        goal: 50.0
        success: 50.0

        # Safety rewards.
        #dof_velocity_penalty: 1.0
        #collision_penalty: 0.1

    lifting_threshold: 0.05


    reset:
        max_episode_length: 200
        reset_reached_goal: False

    randomize: True
    randomization_params:
        object_disturbance:
            probability: 0.2
            magnitude: 15.0
